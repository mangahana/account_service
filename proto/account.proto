syntax = "proto3";

option go_package = "./account_proto";

package account_proto;

import "google/protobuf/empty.proto";

service Account {
  rpc Register(RegisterReq) returns (google.protobuf.Empty) {}
  rpc ConfirmCode(ConfirmCodeReq) returns (google.protobuf.Empty) {}
  rpc CompleteRegister(CompleteRegisterReq) returns (AuthRes) {}
  rpc Login(LoginReq) returns (AuthRes) {}
  rpc Recovery(RecoveryReq) returns (google.protobuf.Empty) {}
  rpc CompleteRecovery(CompleteRecoveryReq) returns (AuthRes) {}
  rpc Ban(BanReq) returns (google.protobuf.Empty) {}
  rpc UnBan(UnBanReq) returns (google.protobuf.Empty) {}
  rpc Authenticate(AuthenticateReq) returns (AuthenticateRes) {}
  rpc FindByID(FindByIDReq) returns (UserRes) {}
  rpc FindByUsername(FindByUsernameReq) returns (UserRes) {}
  rpc IsPhoneExists(IsPhoneExistsReq) returns (google.protobuf.Empty) {}
  rpc ChangePassword(ChangePasswordReq) returns (AuthRes) {}
  rpc UpdatePhoto(UpdatePhotoReq) returns (UpdatePhotoRes){}
  rpc RemovePhoto(RemovePhotoReq) returns (google.protobuf.Empty) {}
}

message RemovePhotoReq {
  int32 user_id = 1;
}

message UpdatePhotoReq {
  int32 user_id = 1;
  bytes file   = 2;
}

message UpdatePhotoRes {
  string photo = 1;
}

message ChangePasswordReq {
  int32  user_id      = 1; 
  string old_password = 2;
  string new_password = 3;
  bool   logout       = 4;
}

message IsPhoneExistsReq {
  string phone = 1;
}

message FindByIDReq {
  int32 id = 1;
}

message FindByUsernameReq {
  string username = 1;
}

message Role {
  int32                    id = 1;
  string                 name = 2;
  repeated string permissions = 3;
}

message UserRes {
  int32  id          = 1;
  string username    = 2;
  string photo       = 3;
  string description = 4;
  Role   role        = 5;
}
 
message RegisterReq {
  string phone = 1;
}

message ConfirmCodeReq {
  string phone = 1;
  string code  = 2;
}

message CompleteRegisterReq {
  string phone    = 1;
  string code     = 2;
  string username = 3;
  string password = 4;
}

message AuthRes {
  string access_token = 1;
}

message LoginReq {
  string phone    = 1;
  string password = 2;
}

message RecoveryReq {
  string phone = 1;
}

message CompleteRecoveryReq {
  string phone    = 1;
  string code     = 2;
  string password = 3;
}

message BanReq {
  int32  caller_user_id = 1;
  int32  user_id        = 2;
  string reason         = 3;
  string expiry         = 4;
} 

message UnBanReq {
  int32  user_id = 1;
  int32  ban_id  = 2;
  string reason  = 3;
}

message AuthenticateReq {
  string access_token = 1;
}

message AuthenticateRes {
  int32 user_id   = 1;
  bool  is_banned = 2;
  Role  role      = 3;
}